name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # Quality Gates
  quality:
    name: 🔍 Quality Gates
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🎨 Lint code
        run: pnpm run lint

      - name: 🔍 Type check
        run: pnpm run type-check

      - name: 📏 Format check
        run: pnpm run format:check

  # Unit & Integration Tests
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run unit tests
        run: pnpm run test:coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # E2E Tests
  e2e:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🎭 Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: 🏗️ Build application
        run: pnpm run build

      - name: 🎭 Run E2E tests
        run: pnpm run e2e

      - name: 📸 Upload E2E test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run security audit
        run: |
          pnpm audit --audit-level moderate
          npx better-npm-audit audit --level moderate

      - name: 🛡️ Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript

  # Build & Deploy
  build:
    name: 🏗️ Build & Deploy
    runs-on: ubuntu-latest
    needs: [quality, test, e2e, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build application
        run: pnpm run build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
          retention-days: 30

      - name: 🚀 Deploy to Preview (dev branch)
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "🚀 Deploying to preview environment..."
          # Add your deployment commands here
          # Example: firebase deploy --only hosting:preview

      - name: 🚀 Deploy to Production (main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "🚀 Deploying to production environment..."
          # Add your deployment commands here
          # Example: firebase deploy --only hosting:production

  # Performance Audit
  lighthouse:
    name: 🔍 Lighthouse Audit
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build and serve
        run: |
          pnpm run build
          pnpm run preview &
          sleep 10

      - name: 🔍 Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Accessibility Audit  
  a11y:
    name: ♿ Accessibility Audit
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build and serve
        run: |
          pnpm run build
          pnpm run preview &
          sleep 10

      - name: ♿ Run axe accessibility tests
        run: |
          npx @axe-core/cli http://localhost:4173 --exit